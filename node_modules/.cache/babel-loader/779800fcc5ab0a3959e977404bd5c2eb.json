{"ast":null,"code":"var _jsxFileName = \"/Volumes/Education/programming Files/PvvSirReact/src/graph.js\";\nimport React from 'react';\nimport { Chart } from \"react-google-charts\";\nexport function MyChart(props) {\n  console.log(props.ar);\n  var data = props.ar;\n  var options = {\n    title: 'Compaction Test Result of Ferro Manganese Slag',\n    hAxis: {\n      title: props.ar[0][0] + \" (%)\"\n    },\n    vAxis: {\n      title: \"Density (g/cm3)\"\n    },\n    series: {\n      0: {\n        curveType: \"function\"\n      },\n      1: {\n        curveType: \"function\"\n      },\n      2: {\n        curveType: \"function\"\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Chart, {\n    chartType: \"LineChart\",\n    width: \"100%\",\n    height: \"600px\",\n    data: data,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }));\n}\nexport function MyChart1(props) {\n  var a = props.a || []; // add a check to assign an empty array if 'a' is undefined or null\n  var ar = [[\"Water Content (%)\", \"Angle of Internal Friction\"]];\n  for (var i = 0; i < a.length; i++) {\n    // use '<' instead of '<=' to avoid accessing undefined index\n    ar.push([a[i], props.b[i]]);\n  }\n  var data = ar;\n  var options = {\n    title: 'Direct Shear Test Result of Ferro Manganese Slag',\n    hAxis: {\n      title: ar[0][0]\n    },\n    vAxis: {\n      title: ar[0][1]\n    },\n    series: {\n      0: {\n        curveType: \"function\"\n      },\n      1: {\n        curveType: \"function\"\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Chart, {\n    chartType: \"LineChart\",\n    width: \"100%\",\n    height: \"600px\",\n    data: data,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }));\n}\nexport default (MyChart, MyChart1);","map":{"version":3,"names":["React","Chart","MyChart","props","console","log","ar","data","options","title","hAxis","vAxis","series","curveType","createElement","Fragment","chartType","width","height","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","MyChart1","a","i","length","push","b"],"sources":["/Volumes/Education/programming Files/PvvSirReact/src/graph.js"],"sourcesContent":["import React from 'react';\nimport { Chart } from \"react-google-charts\";\n\n\n\nexport function MyChart(props) {\n    console.log(props.ar)\n\n    const data = props.ar;\n   const options = {\n    title: 'Compaction Test Result of Ferro Manganese Slag',\n      hAxis: {\n        title: (props.ar[0][0]+\" (%)\"),\n      },\n      vAxis: {\n        title: \"Density (g/cm3)\",\n      },\n      series: {\n        \n        0: { curveType: \"function\" },\n        1: { curveType: \"function\" },\n        2: { curveType: \"function\" },\n      },\n    };\n  \n  \n  \n    return (\n      <>\n      \n      <Chart\n        chartType=\"LineChart\"\n        width=\"100%\"\n        height=\"600px\"\n        data={data}\n        options={options}\n      />\n     \n    \n  \n  \n      \n      \n      \n      </>)\n}\nexport function MyChart1(props) {\n  var a = props.a || []; // add a check to assign an empty array if 'a' is undefined or null\n  var ar = [[\"Water Content (%)\",\"Angle of Internal Friction\"]];\n  for(let i = 0; i < a.length; i++){ // use '<' instead of '<=' to avoid accessing undefined index\n    ar.push([a[i], props.b[i]]);\n  }\n  const data = ar;\n const options = {\n  title: 'Direct Shear Test Result of Ferro Manganese Slag',\n    hAxis: {\n      title: (ar[0][0]),\n    },\n    vAxis: {\n      title: ar[0][1],\n    },\n    series: {\n      \n      0: { curveType: \"function\" },\n      1: { curveType: \"function\" },\n      \n    },\n  };\n\n\n\n  return (\n    <>\n    \n    <Chart\n      chartType=\"LineChart\"\n      width=\"100%\"\n      height=\"600px\"\n      data={data}\n      options={options}\n    />\n   \n  \n\n\n    \n    \n    \n    </>)\n}\n\n\n\n\n\n\nexport default (MyChart,MyChart1);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,qBAAqB;AAI3C,OAAO,SAASC,OAAOA,CAACC,KAAK,EAAE;EAC3BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,EAAE,CAAC;EAErB,IAAMC,IAAI,GAAGJ,KAAK,CAACG,EAAE;EACtB,IAAME,OAAO,GAAG;IACfC,KAAK,EAAE,gDAAgD;IACrDC,KAAK,EAAE;MACLD,KAAK,EAAGN,KAAK,CAACG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC;IACzB,CAAC;IACDK,KAAK,EAAE;MACLF,KAAK,EAAE;IACT,CAAC;IACDG,MAAM,EAAE;MAEN,CAAC,EAAE;QAAEC,SAAS,EAAE;MAAW,CAAC;MAC5B,CAAC,EAAE;QAAEA,SAAS,EAAE;MAAW,CAAC;MAC5B,CAAC,EAAE;QAAEA,SAAS,EAAE;MAAW;IAC7B;EACF,CAAC;EAID,oBACEb,KAAA,CAAAc,aAAA,CAAAd,KAAA,CAAAe,QAAA,qBAEAf,KAAA,CAAAc,aAAA,CAACb,KAAK;IACJe,SAAS,EAAC,WAAW;IACrBC,KAAK,EAAC,MAAM;IACZC,MAAM,EAAC,OAAO;IACdX,IAAI,EAAEA,IAAK;IACXC,OAAO,EAAEA,OAAQ;IAAAW,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EACjB,CAQC;AACT;AACA,OAAO,SAASC,QAAQA,CAACtB,KAAK,EAAE;EAC9B,IAAIuB,CAAC,GAAGvB,KAAK,CAACuB,CAAC,IAAI,EAAE,CAAC,CAAC;EACvB,IAAIpB,EAAE,GAAG,CAAC,CAAC,mBAAmB,EAAC,4BAA4B,CAAC,CAAC;EAC7D,KAAI,IAAIqB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,CAAC,CAACE,MAAM,EAAED,CAAC,EAAE,EAAC;IAAE;IACjCrB,EAAE,CAACuB,IAAI,CAAC,CAACH,CAAC,CAACC,CAAC,CAAC,EAAExB,KAAK,CAAC2B,CAAC,CAACH,CAAC,CAAC,CAAC,CAAC;EAC7B;EACA,IAAMpB,IAAI,GAAGD,EAAE;EAChB,IAAME,OAAO,GAAG;IACfC,KAAK,EAAE,kDAAkD;IACvDC,KAAK,EAAE;MACLD,KAAK,EAAGH,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC;IACDK,KAAK,EAAE;MACLF,KAAK,EAAEH,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC;IACDM,MAAM,EAAE;MAEN,CAAC,EAAE;QAAEC,SAAS,EAAE;MAAW,CAAC;MAC5B,CAAC,EAAE;QAAEA,SAAS,EAAE;MAAW;IAE7B;EACF,CAAC;EAID,oBACEb,KAAA,CAAAc,aAAA,CAAAd,KAAA,CAAAe,QAAA,qBAEAf,KAAA,CAAAc,aAAA,CAACb,KAAK;IACJe,SAAS,EAAC,WAAW;IACrBC,KAAK,EAAC,MAAM;IACZC,MAAM,EAAC,OAAO;IACdX,IAAI,EAAEA,IAAK;IACXC,OAAO,EAAEA,OAAQ;IAAAW,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EACjB,CAQC;AACP;AAOA,gBAAgBtB,OAAO,EAACuB,QAAQ"},"metadata":{},"sourceType":"module"}