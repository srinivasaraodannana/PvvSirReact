{"ast":null,"code":"var _jsxFileName = \"/Volumes/Education/programming Files/PvvSirReact/src/sieve.js\";\nimport Nav from './nav';\nimport { Button } from './button';\nimport { Link } from 'react-router-dom';\nimport React from 'react';\nfunction Sieve() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      color: \"black\",\n      marginTop: \"30px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, \"Sieve Analysis Test Results :-\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    style: {\n      textDecoration: 'none'\n    },\n    to: \"silico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    name: \" Silico Manganese Slag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 58\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    style: {\n      textDecoration: 'none'\n    },\n    to: \"crusher\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Button, {\n    name: \"Crusher Dust\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 60\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    style: {\n      textDecoration: 'none'\n    },\n    to: \"iron\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Button, {\n    name: \"Iron Ore\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 57\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }\n  }, \" Apparatus :-\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 24\n    }\n  }), \"1. Set of IS sieves: 4.75mm, 2mm, 1mm, 600 micron, 425 micron, 300 micron, 212 micron, 150 micron, 106 micron, 75 micron.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 43\n    }\n  }), \"2. Brushes to clean the sieves\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 31\n    }\n  }), \"3. Mechanical sieve shaker\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 27\n    }\n  }), \"4. Balance\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }), \"5. Trays\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), \"6. Thermostatically controlled hot air oven\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 44\n    }\n  }), /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 1\n    }\n  }, \"Procedure :-\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 20\n    }\n  }), \"1. Oven dry the given soil sample passing 4.75 mm IS sieve.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 60\n    }\n  }), \"2. Take 200 g of oven dried soil sample. Mix the sample with distilled water to form a slurry and allow it for soaking.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 33\n    }\n  }), \"3. Wash the soaked soil sample through 75 micron sieve until the water passing through the sieve is substantially clear.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 34\n    }\n  }), \"4. Dry the fraction of the soil retained on 75 micron sieve in oven.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 69\n    }\n  }), \"5. Arrange the remaining sieves one above the other such that 2mm sieve is at the top and 75 micron sieve is at the bottom. Place a cover at the top and receiver at the bottom.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 8\n    }\n  }), \"6. Fix the set of sieves to the mechanical sieve shaker. Operate the sieve shaker for a minimum of 10 minutes.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 23\n    }\n  }), \"7. Carefully collect and record the mass of the soil fraction retained on each sieve and also in the receiver.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 22\n    }\n  }), \"8. Calculate the cumulative mass of soil fraction retained on each sieve. Calculate the percentage finer.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 18\n    }\n  }), \"9. Plot a graph of percentage finer (along y-axis) Vs equivalent particle diameter in mm (along x-axis in log scale). Draw a smooth curve encompassing the plotted points. 10. Record the values of percentage sand, percentage silt and percentage clay size fractions from the graph.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 26\n    }\n  }), \"11. Record D10, D30 and D60 from the graph.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 44\n    }\n  }), \"12. Calculate coefficient of curvature (CC) and coefficient of uniformity (CU).\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 80\n    }\n  }), \"13. Classify the soil based on gradation.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 42\n    }\n  })));\n}\nexport default Sieve;","map":{"version":3,"names":["Nav","Button","Link","React","Sieve","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","color","marginTop","textDecoration","to","name"],"sources":["/Volumes/Education/programming Files/PvvSirReact/src/sieve.js"],"sourcesContent":["import Nav from './nav'\nimport  { Button } from './button';\nimport { Link } from 'react-router-dom';\nimport React from 'react';\n\n\nfunction Sieve(){\n  return (\n    <>\n    <Nav />\n    <h2 style={{color:\"black\",marginTop:\"30px\"}}>Sieve Analysis Test Results :-</h2>\n    <hr></hr>\n    <Link style={{ textDecoration: 'none' }} to=\"silico\"><Button name=\" Silico Manganese Slag\"></Button></Link>\n    <Link style={{ textDecoration: 'none' }} to=\"crusher\"> <Button name=\"Crusher Dust\"></Button></Link>\n    <Link style={{ textDecoration: 'none' }} to=\"iron\"> <Button name=\"Iron Ore\"></Button></Link>\n    <br/>\n    <br/>\n    <br/><br/>\n    <h6>\n\n\n   <b> Apparatus :-</b><br/>\n1. Set of IS sieves: 4.75mm, 2mm, 1mm, 600 micron, 425 micron, 300 micron, 212\nmicron, 150 micron, 106 micron, 75 micron.<br/>\n2. Brushes to clean the sieves<br/>\n3. Mechanical sieve shaker<br/>\n4. Balance<br/>\n5. Trays<br/>\n6. Thermostatically controlled hot air oven<br/>\n<b>Procedure :-</b><br/>\n1. Oven dry the given soil sample passing 4.75 mm IS sieve.<br/>\n2. Take 200 g of oven dried soil sample. Mix the sample with distilled water to form a\nslurry and allow it for soaking.<br/>\n3. Wash the soaked soil sample through 75 micron sieve until the water passing through\nthe sieve is substantially clear.<br/>\n4. Dry the fraction of the soil retained on 75 micron sieve in oven.<br/>\n5. Arrange the remaining sieves one above the other such that 2mm sieve is at the top\nand 75 micron sieve is at the bottom. Place a cover at the top and receiver at the\nbottom.<br/>\n6. Fix the set of sieves to the mechanical sieve shaker. Operate the sieve shaker for a\nminimum of 10 minutes.<br/>\n7. Carefully collect and record the mass of the soil fraction retained on each sieve and\nalso in the receiver.<br/>\n8. Calculate the cumulative mass of soil fraction retained on each sieve. Calculate the\npercentage finer.<br/>\n9. Plot a graph of percentage finer (along y-axis) Vs equivalent particle diameter in mm\n(along x-axis in log scale). Draw a smooth curve encompassing the plotted points.\n10. Record the values of percentage sand, percentage silt and percentage clay size\nfractions from the graph.<br/>\n11. Record D10, D30 and D60 from the graph.<br/>\n12. Calculate coefficient of curvature (CC) and coefficient of uniformity (CU).<br/>\n13. Classify the soil based on gradation.<br/>\n    </h6>\n\n\n\n\n    </>\n   \n  )\n}\nexport default Sieve;"],"mappings":"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"},"metadata":{},"sourceType":"module"}