{"ast":null,"code":"var _jsxFileName = \"/Volumes/Education/programming Files/PvvSirReact/src/graph.js\";\nimport { useEffect, useRef, React } from \"react\";\nimport { Chart } from \"react-google-charts\";\nexport function MyChart(props) {\n  console.log(props.ar);\n  var data = props.ar;\n  var options = {\n    title: 'Compaction Test Result of Ferro Manganese Slag',\n    hAxis: {\n      title: props.ar[0][0] + \" (%)\"\n    },\n    vAxis: {\n      title: \"Density (g/cm3)\"\n    },\n    series: {\n      0: {\n        curveType: \"function\"\n      },\n      1: {\n        curveType: \"function\"\n      },\n      2: {\n        curveType: \"function\"\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Chart, {\n    chartType: \"LineChart\",\n    width: \"100%\",\n    height: \"600px\",\n    data: data,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }));\n}\nexport function MyChart1(props) {\n  var a = props.a || []; // add a check to assign an empty array if 'a' is undefined or null\n  var ar = [[\"Water Content (%)\", \"Angle of Internal Friction\"]];\n  for (var i = 0; i < a.length; i++) {\n    // use '<' instead of '<=' to avoid accessing undefined index\n    ar.push([a[i], props.b[i]]);\n  }\n  var data = ar;\n  var options = {\n    title: 'Direct Shear Test Result of Ferro Manganese Slag',\n    hAxis: {\n      title: ar[0][0]\n    },\n    vAxis: {\n      title: ar[0][1]\n    },\n    series: {\n      0: {\n        curveType: \"function\"\n      },\n      1: {\n        curveType: \"function\"\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Chart, {\n    chartType: \"LineChart\",\n    width: \"100%\",\n    height: \"600px\",\n    data: data,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }));\n}\nexport function MyChart2() {\n  var chartRef = useRef(null);\n  var chartData = {\n    labels: [10, 4.75, 2.36, 1.18, 0.6, 0.3, 0.15, 0.075],\n    datasets: [{\n      label: \"Cumulative Percent Passing\",\n      data: [100, 95.93, 83.85, 69.53, 56.59, 40.01, 18.51, 0.0],\n      type: \"line\",\n      pointRadius: 0,\n      fill: false,\n      lineTension: 0.4,\n      borderWidth: 2,\n      borderColor: \"red\"\n    }]\n  };\n  var chartOptions = {\n    scales: {\n      xAxes: [{\n        title: {\n          display: true,\n          text: \"Sieve Size (mm)\"\n        },\n        type: \"logarithmic\",\n        position: \"bottom\",\n        ticks: {\n          callback: function callback(value, index, values) {\n            return value;\n          }\n        }\n      }],\n      yAxes: [{\n        title: {\n          display: true,\n          text: \"Cumulative Percent Passing (%)\"\n        },\n        type: \"logarithmic\",\n        position: \"left\",\n        ticks: {\n          callback: function callback(value, index, values) {\n            return value + \"%\";\n          },\n          min: 0,\n          max: 100\n        }\n      }]\n    }\n  };\n  useEffect(function () {\n    var chartInstance = new Chart(chartRef.current, {\n      type: \"line\",\n      data: chartData,\n      options: chartOptions\n    });\n    return function () {\n      chartInstance.destroy();\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: chartRef,\n    style: {\n      height: \"400px\",\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }\n  });\n}\nexport default (MyChart, MyChart1, MyChart2);","map":{"version":3,"names":["useEffect","useRef","React","Chart","MyChart","props","console","log","ar","data","options","title","hAxis","vAxis","series","curveType","createElement","Fragment","chartType","width","height","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","MyChart1","a","i","length","push","b","MyChart2","chartRef","chartData","labels","datasets","label","type","pointRadius","fill","lineTension","borderWidth","borderColor","chartOptions","scales","xAxes","display","text","position","ticks","callback","value","index","values","yAxes","min","max","chartInstance","current","destroy","ref","style"],"sources":["/Volumes/Education/programming Files/PvvSirReact/src/graph.js"],"sourcesContent":["\nimport { useEffect, useRef,React } from \"react\";\n\nimport { Chart } from \"react-google-charts\";\n\n\n\nexport function MyChart(props) {\n    console.log(props.ar)\n\n    const data = props.ar;\n   const options = {\n    title: 'Compaction Test Result of Ferro Manganese Slag',\n      hAxis: {\n        title: (props.ar[0][0]+\" (%)\"),\n      },\n      vAxis: {\n        title: \"Density (g/cm3)\",\n      },\n      series: {\n        \n        0: { curveType: \"function\" },\n        1: { curveType: \"function\" },\n        2: { curveType: \"function\" },\n      },\n    };\n  \n  \n  \n    return (\n      <>\n      \n      <Chart\n        chartType=\"LineChart\"\n        width=\"100%\"\n        height=\"600px\"\n        data={data}\n        options={options}\n      />\n     \n    \n  \n  \n      \n      \n      \n      </>)\n}\n\n\n\n\nexport function MyChart1(props) {\n  var a = props.a || []; // add a check to assign an empty array if 'a' is undefined or null\n  var ar = [[\"Water Content (%)\",\"Angle of Internal Friction\"]];\n  for(let i = 0; i < a.length; i++){ // use '<' instead of '<=' to avoid accessing undefined index\n    ar.push([a[i], props.b[i]]);\n  }\n  const data = ar;\n const options = {\n  title: 'Direct Shear Test Result of Ferro Manganese Slag',\n    hAxis: {\n      title: (ar[0][0]),\n    },\n    vAxis: {\n      title: ar[0][1],\n    },\n    series: {\n      \n      0: { curveType: \"function\" },\n      1: { curveType: \"function\" },\n      \n    },\n  };\n\n\n\n  return (\n    <>\n    \n    <Chart\n      chartType=\"LineChart\"\n      width=\"100%\"\n      height=\"600px\"\n      data={data}\n      options={options}\n    />\n   \n  \n\n\n    \n    \n    \n    </>)\n}\n\n\n\n\n\nexport function MyChart2() {\n  const chartRef = useRef(null);\n  const chartData = {\n    labels: [10, 4.75, 2.36, 1.18, 0.6, 0.3, 0.15, 0.075],\n    datasets: [\n      {\n        label: \"Cumulative Percent Passing\",\n        data: [100, 95.93, 83.85, 69.53, 56.59, 40.01, 18.51, 0.0],\n        type: \"line\",\n        pointRadius: 0,\n        fill: false,\n        lineTension: 0.4,\n        borderWidth: 2,\n        borderColor: \"red\",\n      },\n    ],\n  };\n  const chartOptions = {\n    scales: {\n      xAxes: [\n        {\n          title: {\n            display: true,\n            text: \"Sieve Size (mm)\",\n          },\n          type: \"logarithmic\",\n          position: \"bottom\",\n          ticks: {\n            callback: (value, index, values) => value,\n          },\n        },\n      ],\n      yAxes: [\n        {\n          title: {\n            display: true,\n            text: \"Cumulative Percent Passing (%)\",\n          },\n          type: \"logarithmic\",\n          position: \"left\",\n          ticks: {\n            callback: (value, index, values) => value + \"%\",\n            min: 0,\n            max: 100,\n          },\n        },\n      ],\n    },\n  };\n\n  useEffect(() => {\n    const chartInstance = new Chart(chartRef.current, {\n      type: \"line\",\n      data: chartData,\n      options: chartOptions,\n    });\n\n    return () => {\n      chartInstance.destroy();\n    };\n  }, []);\n\n  return (\n    <canvas\n      ref={chartRef}\n      style={{ height: \"400px\", width: \"100%\" }}\n    ></canvas>\n  );\n}\n\n\nexport default (MyChart,MyChart1,MyChart2);\n"],"mappings":";AACA,SAASA,SAAS,EAAEC,MAAM,EAACC,KAAK,QAAQ,OAAO;AAE/C,SAASC,KAAK,QAAQ,qBAAqB;AAI3C,OAAO,SAASC,OAAOA,CAACC,KAAK,EAAE;EAC3BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,EAAE,CAAC;EAErB,IAAMC,IAAI,GAAGJ,KAAK,CAACG,EAAE;EACtB,IAAME,OAAO,GAAG;IACfC,KAAK,EAAE,gDAAgD;IACrDC,KAAK,EAAE;MACLD,KAAK,EAAGN,KAAK,CAACG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC;IACzB,CAAC;IACDK,KAAK,EAAE;MACLF,KAAK,EAAE;IACT,CAAC;IACDG,MAAM,EAAE;MAEN,CAAC,EAAE;QAAEC,SAAS,EAAE;MAAW,CAAC;MAC5B,CAAC,EAAE;QAAEA,SAAS,EAAE;MAAW,CAAC;MAC5B,CAAC,EAAE;QAAEA,SAAS,EAAE;MAAW;IAC7B;EACF,CAAC;EAID,oBACEb,KAAA,CAAAc,aAAA,CAAAd,KAAA,CAAAe,QAAA,qBAEAf,KAAA,CAAAc,aAAA,CAACb,KAAK;IACJe,SAAS,EAAC,WAAW;IACrBC,KAAK,EAAC,MAAM;IACZC,MAAM,EAAC,OAAO;IACdX,IAAI,EAAEA,IAAK;IACXC,OAAO,EAAEA,OAAQ;IAAAW,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EACjB,CAQC;AACT;AAKA,OAAO,SAASC,QAAQA,CAACtB,KAAK,EAAE;EAC9B,IAAIuB,CAAC,GAAGvB,KAAK,CAACuB,CAAC,IAAI,EAAE,CAAC,CAAC;EACvB,IAAIpB,EAAE,GAAG,CAAC,CAAC,mBAAmB,EAAC,4BAA4B,CAAC,CAAC;EAC7D,KAAI,IAAIqB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,CAAC,CAACE,MAAM,EAAED,CAAC,EAAE,EAAC;IAAE;IACjCrB,EAAE,CAACuB,IAAI,CAAC,CAACH,CAAC,CAACC,CAAC,CAAC,EAAExB,KAAK,CAAC2B,CAAC,CAACH,CAAC,CAAC,CAAC,CAAC;EAC7B;EACA,IAAMpB,IAAI,GAAGD,EAAE;EAChB,IAAME,OAAO,GAAG;IACfC,KAAK,EAAE,kDAAkD;IACvDC,KAAK,EAAE;MACLD,KAAK,EAAGH,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC;IACDK,KAAK,EAAE;MACLF,KAAK,EAAEH,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC;IACDM,MAAM,EAAE;MAEN,CAAC,EAAE;QAAEC,SAAS,EAAE;MAAW,CAAC;MAC5B,CAAC,EAAE;QAAEA,SAAS,EAAE;MAAW;IAE7B;EACF,CAAC;EAID,oBACEb,KAAA,CAAAc,aAAA,CAAAd,KAAA,CAAAe,QAAA,qBAEAf,KAAA,CAAAc,aAAA,CAACb,KAAK;IACJe,SAAS,EAAC,WAAW;IACrBC,KAAK,EAAC,MAAM;IACZC,MAAM,EAAC,OAAO;IACdX,IAAI,EAAEA,IAAK;IACXC,OAAO,EAAEA,OAAQ;IAAAW,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EACjB,CAQC;AACP;AAMA,OAAO,SAASO,QAAQA,CAAA,EAAG;EACzB,IAAMC,QAAQ,GAAGjC,MAAM,CAAC,IAAI,CAAC;EAC7B,IAAMkC,SAAS,GAAG;IAChBC,MAAM,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC;IACrDC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,4BAA4B;MACnC7B,IAAI,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,CAAC;MAC1D8B,IAAI,EAAE,MAAM;MACZC,WAAW,EAAE,CAAC;MACdC,IAAI,EAAE,KAAK;MACXC,WAAW,EAAE,GAAG;MAChBC,WAAW,EAAE,CAAC;MACdC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EACD,IAAMC,YAAY,GAAG;IACnBC,MAAM,EAAE;MACNC,KAAK,EAAE,CACL;QACEpC,KAAK,EAAE;UACLqC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR,CAAC;QACDV,IAAI,EAAE,aAAa;QACnBW,QAAQ,EAAE,QAAQ;QAClBC,KAAK,EAAE;UACLC,QAAQ,EAAE,SAAAA,SAACC,KAAK,EAAEC,KAAK,EAAEC,MAAM;YAAA,OAAKF,KAAK;UAAA;QAC3C;MACF,CAAC,CACF;MACDG,KAAK,EAAE,CACL;QACE7C,KAAK,EAAE;UACLqC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR,CAAC;QACDV,IAAI,EAAE,aAAa;QACnBW,QAAQ,EAAE,MAAM;QAChBC,KAAK,EAAE;UACLC,QAAQ,EAAE,SAAAA,SAACC,KAAK,EAAEC,KAAK,EAAEC,MAAM;YAAA,OAAKF,KAAK,GAAG,GAAG;UAAA;UAC/CI,GAAG,EAAE,CAAC;UACNC,GAAG,EAAE;QACP;MACF,CAAC;IAEL;EACF,CAAC;EAED1D,SAAS,CAAC,YAAM;IACd,IAAM2D,aAAa,GAAG,IAAIxD,KAAK,CAAC+B,QAAQ,CAAC0B,OAAO,EAAE;MAChDrB,IAAI,EAAE,MAAM;MACZ9B,IAAI,EAAE0B,SAAS;MACfzB,OAAO,EAAEmC;IACX,CAAC,CAAC;IAEF,OAAO,YAAM;MACXc,aAAa,CAACE,OAAO,EAAE;IACzB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE3D,KAAA,CAAAc,aAAA;IACE8C,GAAG,EAAE5B,QAAS;IACd6B,KAAK,EAAE;MAAE3C,MAAM,EAAE,OAAO;MAAED,KAAK,EAAE;IAAO,CAAE;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAClC;AAEd;AAGA,gBAAgBtB,OAAO,EAACuB,QAAQ,EAACM,QAAQ"},"metadata":{},"sourceType":"module"}